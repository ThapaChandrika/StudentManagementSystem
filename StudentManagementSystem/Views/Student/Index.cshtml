@model PaginatedList<StudentManagementSystem.ViewModel.StudentViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />&nbsp;
            <input type="submit" value="Search" class="btn btn-outline-dark" />&nbsp; |&nbsp;&nbsp;&nbsp;
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            @*<th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>*@
            <th>
                @Html.ActionLink("Name", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @* @Html.DisplayNameFor(model => model.Name )*@
            </th>
            @*<th>
                @Html.ActionLink("FatherName", "Index", new { currentFilter = ViewBag.CurrentFilter })

                @Html.DisplayNameFor(model => model.FatherName)
            </th>*@
            <th>
                @Html.ActionLink("Gender", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @*@Html.DisplayNameFor(model => model.Gender)*@
            </th>
            <th>
                @Html.ActionLink("Address", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @* @Html.DisplayNameFor(model => model.Address)*@
            </th>
            <th>
                @Html.ActionLink("Email", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @* @Html.DisplayNameFor(model => model.Email)*@
            </th>
            <th>
                @Html.ActionLink("Phone No", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @* @Html.DisplayNameFor(model => model.PhoneNo)*@
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.DOB)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.BillingId)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.ScholarshipType)
                </th>*@
            @*<th>
                    @Html.DisplayNameFor(model => model.FacultyId)
                </th>*@
            <th>
                @Html.ActionLink("Faculty", "Index", new { currentFilter = ViewBag.CurrentFilter })
                @* @Html.DisplayNameFor(model => model.FacultyName)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.FatherName)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNo)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.DOB)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.BillingId)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.ScholarshipType)
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.FacultyId)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.FacultyName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm m-1">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-sm m-1">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm m-1">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-dark @nextDisabled">
    Next
</a>
